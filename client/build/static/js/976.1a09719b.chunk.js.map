{"version":3,"file":"static/js/976.1a09719b.chunk.js","mappings":"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","sources":["pages/Cart/Cart.styles.js","pages/Cart/components/Address.styles.js","pages/Cart/components/Address.jsx","pages/Cart/Cart.jsx","pages/Profile/styles/Address.styles.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: clamp(250px, 90%, 900px);\r\n  margin: 0px auto;\r\n  padding: 115px 0 115px;\r\n  min-height: 85vh;\r\n\r\n  .cart__order-success-text {\r\n    text-align: center;\r\n    font-size: clamp(1rem, 4vw, 1.4rem);\r\n    font-weight: 500;\r\n    margin-top: 50px;\r\n    line-height: 1.3rem;\r\n  }\r\n\r\n  .cart__view-order-btn {\r\n    display: block;\r\n    padding: 7px 14px;\r\n    font-size: clamp(13px, 1.2vw, 1rem);\r\n    margin: 40px auto 0;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    .cart__view-order-btn {\r\n      padding: 6px 12px;\r\n      margin: 30px auto 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\n//CART BOXES\r\nexport const LeftBox = styled.div`\r\n  flex-basis: 57%;\r\n`;\r\n\r\nexport const RightBox = styled.div`\r\n  flex-basis: 38%;\r\n  height: 45vh;\r\n  box-shadow: -1px 3px 8px 0px rgba(0, 0, 0, 0.15);\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n\r\n  div {\r\n    font-size: clamp(1rem, 1.5vw, 1.1rem);\r\n    font-weight: 500;\r\n  }\r\n\r\n  .cart__total-products {\r\n    span {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .cart__total-price {\r\n    margin-top: 15px;\r\n    span {\r\n      font-weight: 600;\r\n      font-size: clamp(1.1rem, 1.5vw, 1.2rem);\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n\r\n  .cart__order-btn {\r\n    width: 100%;\r\n    padding: 7px;\r\n    font-size: clamp(14.5px, 1.5vw, 15.5px);\r\n    margin-top: 30px;\r\n  }\r\n\r\n  .cart__order-static-btn {\r\n    cursor: auto;\r\n    &:active {\r\n      background: var(--background-color);\r\n    }\r\n  }\r\n  .cart__empty-address-msg {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #f50f0f;\r\n    font-weight: 600;\r\n    margin-top: 20px;\r\n    font-size: clamp(15px, 2vw, 1.05rem);\r\n\r\n    svg {\r\n      margin-right: 4px;\r\n      font-size: clamp(1rem, 2vw, 1.1rem);\r\n    }\r\n  }\r\n`;\r\n\r\n//CART ITEMS\r\nexport const Card = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  margin-bottom: 30px;\r\n  box-shadow: -1px 3px 8px 0px rgba(0, 0, 0, 0.15);\r\n\r\n  img {\r\n    width: 110px;\r\n    height: 100px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .cart__item-details {\r\n    flex: 1;\r\n    padding-left: 30px;\r\n\r\n    .cart__item-title {\r\n      width: fit-content;\r\n      margin-bottom: 10px;\r\n      font-weight: 500;\r\n      font-size: clamp(14px, 1.3vw, 15px);\r\n      line-height: 1.3rem;\r\n      cursor: pointer;\r\n    }\r\n    .cart__item-price {\r\n      font-weight: 600;\r\n      font-size: clamp(15px, 1.5vw, 1rem);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding: 20px 15px;\r\n  }\r\n`;\r\n\r\nexport const ButtonsBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n\r\n  .cart__qty-btns {\r\n    display: flex;\r\n    height: 30px;\r\n    border: 1px solid var(--primary-theme-color);\r\n    margin-right: 20px;\r\n\r\n    div {\r\n      width: 40px;\r\n      height: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      font-weight: 600;\r\n      font-size: clamp(14px, 1.2vw, 1rem);\r\n      transition: 300ms background-color ease-in-out;\r\n      user-select: none;\r\n\r\n      &:not(:last-child) {\r\n        border-right: 1px solid var(--primary-theme-color);\r\n      }\r\n      @media screen and (max-width: 600px) {\r\n        width: 28px;\r\n      }\r\n    }\r\n\r\n    .cart__item-delete {\r\n      font-size: clamp(14px, 1.2vw, 1rem);\r\n      cursor: pointer;\r\n      &:active {\r\n        background-color: var(--primary-theme-color);\r\n      }\r\n    }\r\n\r\n    .cart__item-add {\r\n      font-size: clamp(1rem, 1.8vw, 1.2rem);\r\n      cursor: pointer;\r\n      &:active {\r\n        background-color: rgb(30, 224, 30);\r\n      }\r\n    }\r\n  }\r\n\r\n  .cart__move-item-btn {\r\n    font-size: clamp(12px, 1vw, 14px);\r\n    padding: 6px 12px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    .cart__qty-btns {\r\n      margin-bottom: 15px;\r\n      height: 27px;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  margin-bottom: 30px;\r\n  box-shadow: -1px 3px 8px 0px rgba(0, 0, 0, 0.15);\r\n\r\n  .cart__change-address-btn {\r\n    font-size: clamp(12.5px, 1.2vw, 14.5px);\r\n    padding: 6px 12px;\r\n    margin-right: 0px;\r\n  }\r\n\r\n  .cart__address {\r\n    flex: 1;\r\n    margin-right: 10px;\r\n    div {\r\n      margin-bottom: 4px;\r\n      font-size: clamp(13px, 1.2vw, 14px);\r\n      color: rgba(0, 0, 0, 0.7);\r\n      font-weight: 500;\r\n      line-height: 1.1rem;\r\n    }\r\n\r\n    .cart__address-empty {\r\n      font-size: clamp(1rem, 2vw, 1.1rem);\r\n      font-weight: 500;\r\n    }\r\n\r\n    .cart__address-name {\r\n      margin-bottom: 8px;\r\n      color: rgba(0, 0, 0, 0.8);\r\n      line-height: 1.3rem;\r\n\r\n      span {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddressesContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 6;\r\n  width: 100%;\r\n  height: 100vh;\r\n  backdrop-filter: blur(5px);\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const AddressesBox = styled.div`\r\n  background-color: white;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  width: clamp(250px, 90%, 600px);\r\n  max-height: 95vh;\r\n  overflow-y: auto;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    max-height: 80vh;\r\n  }\r\n`;\r\n","//icons\r\nimport { GrFormAdd } from \"react-icons/gr\";\r\n\r\n//styles\r\nimport { Container, AddressesContainer, AddressesBox } from \"./Address.styles\";\r\nimport { ButtonOutline } from \"../../../styles/Main.styles\";\r\nimport { AddButton } from \"../../Profile/styles/Address.styles\";\r\n\r\n//custom-hook\r\nimport { useClickOutside } from \"../../../custom-hook\";\r\n\r\n//context\r\nimport { useModal, useProfile } from \"../../../contexts\";\r\n\r\n//component\r\nimport { SelectAddress, NewAddress } from \"../../../components\";\r\n\r\nconst Address = () => {\r\n  const { addresses, selectedAddress } = useProfile();\r\n\r\n  const { openAddresses, setOpenAddresses, openNewAddress, setOpenNewAddress } =\r\n    useModal();\r\n\r\n  //custom-hook for closing address modal\r\n  const nodeRef = useClickOutside(() => setOpenAddresses(false));\r\n\r\n  //selected address\r\n  const address = addresses?.find(({ id }) => id === selectedAddress);\r\n\r\n  //change address\r\n  const addressHandler = () => {\r\n    setOpenAddresses(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"cart__address\">\r\n        {address ? (\r\n          <>\r\n            <div className=\"cart__address-name\">\r\n              Delivery to :\r\n              <span>\r\n                {\" \"}\r\n                {address?.name}, {address?.city}-{address?.pincode}\r\n              </span>\r\n            </div>\r\n            <div>{address?.area}</div>\r\n            <div>{address?.state}</div>\r\n          </>\r\n        ) : (\r\n          <div className=\"cart__address-empty\">Address is not selected</div>\r\n        )}\r\n      </div>\r\n      <ButtonOutline\r\n        className=\"cart__change-address-btn\"\r\n        onClick={addressHandler}\r\n      >\r\n        Change\r\n      </ButtonOutline>\r\n\r\n      {openAddresses && (\r\n        <AddressesContainer>\r\n          <AddressesBox ref={nodeRef}>\r\n            <SelectAddress />\r\n            <AddButton onClick={() => setOpenNewAddress(true)}>\r\n              <GrFormAdd /> <span> ADD NEW ADDRESS</span>\r\n            </AddButton>\r\n\r\n            {openNewAddress && <NewAddress />}\r\n          </AddressesBox>\r\n        </AddressesContainer>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import { useEffect, useState } from \"react\";\r\n\r\n//icons\r\nimport { AiOutlineMinus } from \"react-icons/ai\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { BiErrorCircle } from \"react-icons/bi\";\r\n\r\n//styles\r\nimport {\r\n  Container,\r\n  Box,\r\n  LeftBox,\r\n  RightBox,\r\n  Card,\r\n  ButtonsBox,\r\n} from \"./Cart.styles\";\r\n\r\nimport {\r\n  ButtonFill,\r\n  ButtonOutline,\r\n  StyledTitle,\r\n  EmptyBox,\r\n} from \"../../styles/Main.styles\";\r\n\r\n//img\r\nimport images from \"../../constants/images\";\r\n\r\n//utils\r\nimport {\r\n  getProductPrice,\r\n  getTotalItems,\r\n  getTotalPrice,\r\n  addToDatabase,\r\n  setCartItems,\r\n  loadScript,\r\n} from \"../../utils\";\r\n\r\n//firebase\r\nimport { db } from \"../../config/firebaseConfig\";\r\nimport { ref, set } from \"firebase/database\";\r\n\r\n//others\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport numeral from \"numeral\";\r\nimport axios from \"axios\";\r\nimport { v4 } from \"uuid\";\r\nimport { useAuth, useProducts, useProfile } from \"../../contexts\";\r\nimport Address from \"./components/Address\";\r\n\r\n//local server base url\r\n// const BASE_URL = \"http://localhost:8000/api/payment\";\r\n\r\n////production server base url\r\nconst BASE_URL = \"https://shopsy-one.vercel.app/api/payment\";\r\n\r\nconst Cart = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { cartItems, wishlist } = useProducts();\r\n  const { user, userName } = useAuth();\r\n  const { addresses, selectedAddress, orders } = useProfile();\r\n\r\n  const [paymentSuccessMsg, setPaymentSuccessMsg] = useState(null);\r\n\r\n  //scroll the page to top\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n  }, []);\r\n\r\n  //write order data in the db\r\n  const setOrderData = async (paymentInfo) => {\r\n    const address = addresses.find(({ id }) => id === selectedAddress);\r\n    const price = getTotalPrice(cartItems);\r\n    const date = new Date().toDateString();\r\n    const order = {\r\n      products: cartItems,\r\n      price,\r\n      address,\r\n      date,\r\n      paymentInfo,\r\n      id: v4(),\r\n    };\r\n\r\n    const databaseRef = ref(db, `${user.uid}/orders`);\r\n    try {\r\n      await set(databaseRef, [order, ...orders]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //display Razorpay for payment\r\n  const displayRazorpay = async () => {\r\n    if (selectedAddress === \"\") {\r\n      console.log(\"Empty address\");\r\n      return;\r\n    }\r\n\r\n    //load checkout script\r\n    try {\r\n      await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\r\n    } catch (error) {\r\n      alert(\"Razorpay SDK failed to load. Are you online?\");\r\n      return;\r\n    }\r\n\r\n    const price = getTotalPrice(cartItems);\r\n    // creating a new order\r\n    const orderUrl = `${BASE_URL}/orders`;\r\n    const result = await axios.post(orderUrl, { amount: price });\r\n\r\n    if (!result) {\r\n      alert(\"Server error. Are you online?\");\r\n      return;\r\n    }\r\n\r\n    // getting the order details\r\n    const { id, amount, currency } = result.data;\r\n\r\n    var options = {\r\n      key: process.env.RAZORPAY_KEY_ID,\r\n      amount: amount,\r\n      currency: currency,\r\n      name: \"Shopsy\",\r\n      description: \"Test Transaction\",\r\n      image: images.logo,\r\n      order_id: id,\r\n      handler: async function (response) {\r\n        try {\r\n          const verifyUrl = `${BASE_URL}/verify`;\r\n          const { data } = await axios.post(verifyUrl, response);\r\n          setOrderData(response);\r\n          setPaymentSuccessMsg(data.message);\r\n          setCartItems(user, cartItems, \"\", \"empty\");\r\n          window.scroll(0, 0);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      prefill: {\r\n        name: userName,\r\n        email: user.email,\r\n        contact: \"9999999999\",\r\n      },\r\n      theme: {\r\n        color: \"rgb(13, 82, 255)\",\r\n      },\r\n    };\r\n\r\n    const paymentObject = new window.Razorpay(options);\r\n    paymentObject.open();\r\n  };\r\n\r\n  //move to wishlist and remove from cartItems\r\n  const wishlistHandler = (item) => {\r\n    addToDatabase(user, wishlist, item, \"move\");\r\n    setCartItems(user, cartItems, item, \"remove\");\r\n  };\r\n\r\n  //when cartItems is empty\r\n  if (cartItems.length === 0) {\r\n    if (paymentSuccessMsg) {\r\n      return (\r\n        <Container>\r\n          <div\r\n            className=\"cart__order-success-text\"\r\n            style={{ marginTop: \"50px\" }}\r\n          >\r\n            {paymentSuccessMsg}\r\n          </div>\r\n          <ButtonFill\r\n            className=\"cart__view-order-btn\"\r\n            onClick={() => {\r\n              navigate(\"/orders\");\r\n              setPaymentSuccessMsg(null);\r\n            }}\r\n          >\r\n            View Order\r\n          </ButtonFill>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container>\r\n          <EmptyBox>Your cart is empty</EmptyBox>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <StyledTitle>Shopping Cart</StyledTitle>\r\n      <Box>\r\n        <LeftBox>\r\n          <Address />\r\n          {cartItems?.map((item) => (\r\n            <Card key={item?.id}>\r\n              <img\r\n                src={item?.image}\r\n                alt=\"product\"\r\n                onClick={() => navigate(`/product/${item?.id}`)}\r\n              />\r\n              <div className=\"cart__item-details\">\r\n                <div\r\n                  className=\"cart__item-title\"\r\n                  onClick={() => navigate(`/product/${item?.id}`)}\r\n                >\r\n                  {item?.title}\r\n                </div>\r\n                <div className=\"cart__item-price\">\r\n                  {getProductPrice(item?.price)}\r\n                </div>\r\n                <ButtonsBox>\r\n                  <div className=\"cart__qty-btns\">\r\n                    <div\r\n                      className=\"cart__item-delete\"\r\n                      onClick={() => setCartItems(user, cartItems, item, \"dec\")}\r\n                    >\r\n                      {item?.count === 1 ? (\r\n                        <AiOutlineDelete />\r\n                      ) : (\r\n                        <AiOutlineMinus />\r\n                      )}\r\n                    </div>\r\n                    <div>{item?.count}</div>\r\n                    <div\r\n                      className=\"cart__item-add\"\r\n                      onClick={() => setCartItems(user, cartItems, item, \"inc\")}\r\n                    >\r\n                      <IoMdAdd />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <ButtonOutline\r\n                    className=\"cart__move-item-btn\"\r\n                    onClick={() => wishlistHandler(item)}\r\n                  >\r\n                    Move to Wishlist\r\n                  </ButtonOutline>\r\n                </ButtonsBox>\r\n              </div>\r\n            </Card>\r\n          ))}\r\n        </LeftBox>\r\n        <RightBox>\r\n          <div className=\"cart__total-products\">\r\n            Total Products (<span>{getTotalItems(cartItems)}</span>)\r\n          </div>\r\n          <div className=\"cart__total-price\">\r\n            Total Amount{\" \"}\r\n            <span>\r\n              &#8377; {numeral(getTotalPrice(cartItems)).format(\"0,0\")}\r\n            </span>\r\n          </div>\r\n          <ButtonFill\r\n            className={`cart__order-btn ${\r\n              selectedAddress === \"\" && \"cart__order-static-btn\"\r\n            }`}\r\n            onClick={displayRazorpay}\r\n          >\r\n            Place Order\r\n          </ButtonFill>\r\n\r\n          {selectedAddress === \"\" && (\r\n            <div className=\"cart__empty-address-msg \">\r\n              <BiErrorCircle />\r\n              <span>Select address to place order</span>\r\n            </div>\r\n          )}\r\n        </RightBox>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: clamp(250px, 90%, 550px);\r\n  min-height: 85vh;\r\n  margin: 0 auto;\r\n  padding: 115px 0px;\r\n`;\r\n\r\nexport const AddButton = styled.div`\r\n  width: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n  color: rgba(0, 0, 0, 0.6);\r\n  cursor: pointer;\r\n  transition: 200ms color ease-in-out;\r\n\r\n  svg {\r\n    font-size: clamp(1.6rem, 2.5vw, 1.8rem);\r\n    margin-right: 5px;\r\n  }\r\n  span {\r\n    font-size: clamp(1rem, 2vw, 1.1rem);\r\n    font-weight: 600;\r\n  }\r\n\r\n  &:hover {\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n"],"names":["Container","styled","Box","LeftBox","RightBox","Card","ButtonsBox","AddressesContainer","AddressesBox","useProfile","addresses","selectedAddress","useModal","openAddresses","setOpenAddresses","openNewAddress","setOpenNewAddress","nodeRef","useClickOutside","address","find","id","className","name","city","pincode","area","state","onClick","ref","BASE_URL","navigate","useNavigate","useProducts","cartItems","wishlist","useAuth","user","userName","orders","useState","paymentSuccessMsg","setPaymentSuccessMsg","useEffect","window","scroll","setOrderData","paymentInfo","price","getTotalPrice","date","Date","toDateString","order","products","v4","databaseRef","db","uid","set","console","log","displayRazorpay","loadScript","alert","orderUrl","axios","amount","result","data","currency","options","key","process","RAZORPAY_KEY_ID","description","image","images","order_id","handler","response","verifyUrl","message","setCartItems","prefill","email","contact","theme","color","Razorpay","open","length","style","marginTop","map","item","src","alt","title","getProductPrice","count","addToDatabase","wishlistHandler","getTotalItems","numeral","format","AddButton"],"sourceRoot":""}